[tool.poetry]
name = "telegrinder"
version = "0.3.4.post1"
description = "Modern visionary telegram bot framework."
authors = ["timoniq <tesseradecades@mail.ru>"]
maintainers = ["luwqz1 <howluwqz1@gmail.com>"]
license = "MIT"
readme = "readme.md"
homepage = "https://github.com/timoniq/telegrinder"
repository = "https://github.com/timoniq/telegrinder"
keywords = [
  "asyncio",
  "api schema",
  "async",
  "bot building",
  "bot api",
  "custom rules",
  "telegram",
  "telegram bot api framework",
  "telegrinder framework",
  "middleware",
  "composition",
  "framework",
  "telegrinder",
  "waiter machine"
]
classifiers = [
  "Environment :: Console",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Software Development :: Quality Assurance",
  "Typing :: Typed",
]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/timoniq/telegrinder/issues"

[tool.poetry.dependencies]
python = "^3.12"
aiohttp = "^3.8.1"
colorama = "^0.4.0"
vbml = "^1.1.post1"
choicelib = "^0.1.5"
envparse = "^0.2.0"
PyYAML = "^6.0"
certifi = "^2024.2.2"
msgspec = "^0.18.6"
typing-extensions = "^4.10.0"
fntypes = "^0.1.4"

[tool.poetry.group.dev.dependencies]
pre-commit = ">=3.8,<5.0"
ruff = ">=0.5,<0.9"
basedpyright = "^1.18.4"
requests = "^2.28.1"
sort-all = "^1.2.0"
libcst = "^1.4.0"
pytest = "^8.0.0"
pytest-asyncio = ">=0.23.5,<0.25.0"
pytest-cov = ">=5,<7"
pytest-mock = "^3.10.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 110
target-version = "py312"
lint.select = ["I", "N", "ANN", "COM", "YTT", "TCH", "SIM"]
lint.ignore = [
  "ANN001", "ANN002", "ANN003", "ANN101", "ANN102", "ANN201", "ANN202",
  "ANN204", "ANN206", "ANN401", "COM812", "N805", "N818", "TCH001", "TCH002",
  "TCH003", "TCH004"
]

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "F403"]
"typegen/**.py" = ["N802"]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"

[tool.pyright]
exclude = [
  "**/__pycache__",
  "docs",
  "local",
]
typeCheckingMode = "basic"
pythonPlatform = "All"
pythonVersion = "3.12"
reportMissingImports = true
reportMissingTypeStubs = false
